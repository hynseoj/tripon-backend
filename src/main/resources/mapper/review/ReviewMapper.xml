<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="com.ssafy.tripon.review.domain.ReviewRepository">

	<insert id="save" parameterType="Review" useGeneratedKeys="true"
		keyProperty="id">
		INSERT INTO reviews (member_email, title,
		thumbnail_original, thumbnail_url)
		VALUES
		(#{memberEmail},
		#{title},#{thumbnailOriginal}, #{thumbnailUrl})
	</insert>

	<select id="findAll" resultType="Review">
		SELECT id, member_email as
		memberEmail, title, created_at as createdAt,
		updated_at as updatedAt,
		thumbnail_original as thumbnailOriginal, thumbnail_url as thumbnailUrl
		FROM reviews
		ORDER BY created_at desc
	</select>

	<select id="findAllByKeyword" resultType="Review">
		SELECT id, member_email
		as
		memberEmail, title, created_at as createdAt,
		updated_at as updatedAt,
		thumbnail_original as thumbnailOriginal, thumbnail_url as thumbnailUrl
		FROM reviews
		WHERE title LIKE CONCAT('%', #{keyword}, '%')
		ORDER BY
		created_at desc
	</select>


	<select id="findAllReviewsByMemberId" resultType="Review">
		SELECT id,
		member_email as
		memberEmail, title, created_at as createdAt,
		updated_at
		as updatedAt,
		thumbnail_original as thumbnailOriginal, thumbnail_url as
		thumbnailUrl
		FROM reviews
		where member_email = #{email}
		ORDER BY
		created_at desc
	</select>

	<select id="findById" parameterType="Integer"
		resultType="Review">
		SELECT id, member_email as memberEmail, title, created_at
		as createdAt,
		updated_at as updatedAt,thumbnail_original as
		thumbnailOriginal, thumbnail_url as
		thumbnailUrl
		FROM reviews
		WHERE id =
		#{id}
	</select>

	<select id="findThumbNailByReviewId" parameterType="Integer"
		resultType="String">
		SELECT thumbnail_url as
		thumbnailUrl
		FROM reviews
		WHERE id =
		#{id}
	</select>

	<update id="update" parameterType="Review">
		UPDATE reviews
		SET title =
		#{title},
		updated_at = NOW()
		WHERE id = #{id}
	</update>

	<update id="updateWithThumbnail" parameterType="Review">
		UPDATE reviews
		SET title =
		#{title},
		updated_at = NOW(),
		thumbnail_original =
		#{thumbnailOriginal},
		thumbnail_url = #{thumbnailUrl}
		WHERE id = #{id}
	</update>

	<delete id="deleteById" parameterType="Integer">
		DELETE FROM reviews
		WHERE
		id = #{id}
	</delete>

	<select id="findTop4ByLikeInLastMonth" resultType="Review">
		SELECT r.id,
		r.member_email AS memberEmail,
		r.title,
		r.created_at AS createdAt,
		r.updated_at AS updatedAt,
		r.thumbnail_original AS thumbnailOriginal,
		r.thumbnail_url AS thumbnailUrl,
		COUNT(l.id) AS likeCount
		FROM reviews r
		LEFT JOIN liked_reviews l ON r.id = l.review_id
		WHERE r.created_at >= DATE_SUB(NOW(), INTERVAL 1 MONTH)
		GROUP BY r.id
		ORDER BY likeCount DESC
		LIMIT 4
	</select>


	<select id="findPagedSorted" resultType="Review">
		SELECT id, member_email as
		memberEmail, title, created_at as createdAt,
		updated_at as updatedAt,
		thumbnail_original as thumbnailOriginal,
		thumbnail_url as thumbnailUrl
		FROM reviews
		<where>
			<if test="keyword != null and keyword != ''">
				title LIKE CONCAT('%', #{keyword}, '%')
			</if>
		</where>
		ORDER BY created_at desc
		LIMIT #{size} OFFSET #{offset}
	</select>

	<select id="countAll" resultType="int">
		SELECT COUNT(*) FROM reviews
		<where>
			<if test="keyword != null and keyword != ''">
				title LIKE CONCAT('%', #{keyword}, '%')
			</if>
		</where>
	</select>

	<select id="findPagedByLikeCount" resultType="Review">
		SELECT id,
		member_email as
		memberEmail, title, created_at as createdAt,
		updated_at
		as updatedAt,
		thumbnail_original as thumbnailOriginal,
		thumbnail_url as
		thumbnailUrl
		FROM reviews r
		LEFT JOIN (
		SELECT review_id,
		COUNT(*) AS
		like_count
		FROM liked_reviews

		GROUP BY review_id
		) l ON r.id =
		l.review_id
		<where>
			<if test="keyword != null and keyword != ''">
				title LIKE CONCAT('%', #{keyword}, '%')
			</if>
		</where>
		ORDER BY COALESCE(l.like_count, 0) DESC, r.created_at DESC
		LIMIT
		#{size} OFFSET #{offset}
	</select>


</mapper>